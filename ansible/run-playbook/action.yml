name: Ansible Playbook
description: Run Ansible Playbook
inputs:
  playbook_path:
    description: 'Path to the playbook'
    required: true
  inventory_path:
    description: 'Path to the inventory file'
    required: false
    default: 'inventory/hosts.ini'
  with_vault:
    description: 'use vault'
    required: false
    default: 'true'
  tags:
    description: 'tags to run'
    required: false
    default: ''
  debug_level:
    description: 'debug level'
    required: false
    default: '-v'
  hosts:
    description: 'hosts to run'
    required: false
    default: 'all'
  vars:
    description: 'extra vars'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - name: Create vault password file
      shell: bash
      id: vault
      if: inputs.with_vault == 'true'
      run: |
        echo "$VAULT_DECRYPT_TOKEN" > .vault_password
        chmod 0600 .vault_password || true
    
    - name: Run Ansible Playbook
      shell: bash
      run: |
        args_string=""
        if [ -n "${{ inputs.tags }}" ]; then
          args_string="$args_string --tags ${{ inputs.tags }}"
        fi
        if [ -n "${{ inputs.hosts }}" ]; then
          args_string="$args_string --limit ${{ inputs.hosts }}"
        fi
        if [ -n "${{ inputs.vars }}" ]; then
          args_string="$args_string --extra-vars \"${{ inputs.vars }}\""
        fi
        if [ "${{ inputs.with_vault }}" = "true" ]; then
          args_string="$args_string --vault-password-file .vault_password"
        fi

        ansible-playbook \
          -i ${{ inputs.inventory_path }} \
          ${{ inputs.debug_level }} \
          ${{ inputs.playbook_path }} \
          $args_string
    
    - name: Remove vault password file
      shell: bash
      if: steps.vault.conclusion == 'success'
      run: |
        rm -f .vault_password